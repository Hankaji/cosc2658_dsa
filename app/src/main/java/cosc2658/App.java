/*
 * This source file was generated by the Gradle 'init' task
 */
package cosc2658;

import cosc2658.adt.Vec2;

public class App {

  // SOLUTION_3 = 2;
  // SOLUTION_4 = 8;
  // SOLUTION_5 = 86;
  // SOLUTION_6 = 1770;
  // SOLUTION_8 = 8943966;

  public static void main(String[] args) {
    // Grid grid = new Grid(new Vec2(8, 8), new Vec2(0, 7), new Vec2(0, 0));
    Grid grid = new Grid(Vec2.splat(8));

    // grid.useDebug();

    long startMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long startTime = System.currentTimeMillis();

    int allPaths = grid.findAllPaths();

    long endTime = System.currentTimeMillis();
    long endMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();

    System.out.println("Memory Used: " + (endMemory - startMemory) + " bytes");
    System.out.println("Total paths: " + allPaths);
    System.out.println("Execution time: " + formatTime(endTime - startTime));
  }

  private static String formatTime(long durationMs) {
    // if (durationMs > 1000)
    // return String.valueOf(TimeUnit.MILLISECONDS.toSeconds(durationMs)) + "s";
    return String.valueOf(durationMs) + "ms";
  }
}
